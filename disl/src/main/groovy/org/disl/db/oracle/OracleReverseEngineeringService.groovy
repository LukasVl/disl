package org.disl.db.oracleimport groovy.sql.Sqlimport org.disl.meta.Tableimport org.disl.reverseEngineering.ReverseEngineeringService


class OracleReverseEngineeringService extends ReverseEngineeringService {	boolean useCharLength=true	@Override	protected String getDataType(String dataTypeName, BigDecimal size,			BigDecimal decimalDigits, BigDecimal sqlDataType) {		if (isUseCharLength() && (dataTypeName=="VARCHAR2" || dataTypeName=="CHAR")) {			return "${dataTypeName}(${size} CHAR)"		}		return super.getDataType(dataTypeName, size, decimalDigits, sqlDataType);	}	@Override	protected List<Table> reverseEngineerTables(Sql sql, String tablePattern,			String tableTypes, String sourceSchemaFilterPattern) {		List<Table> tables=super.reverseEngineerTables(sql, tablePattern, tableTypes,				sourceSchemaFilterPattern);		tables.each { initDescription(sql,it) }		return tables	}				protected void initDescription(Sql sql,Table table) {		sql.eachRow("select comments from all_tab_comments where owner=${table.physicalSchema} and table_name=${table.getName()}",{row -> table.description=row.COMMENTS})		sql.eachRow("select column_name,comments from all_col_comments where owner=${table.physicalSchema} and table_name=${table.getName()}",{row -> table.columns.find({it.getName()==row.COLUMN_NAME}).description=row.COMMENTS})			}}
